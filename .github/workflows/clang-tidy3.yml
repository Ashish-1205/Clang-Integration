name: Clang-Tidy PR

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  clang-tidy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy clang-tools cmake make
          
      - name: Build Code
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          make

      # - name: Run Scan Build
      #   run: |
      #     mkdir -p build-scan
      #     cd build-scan
      #     scan-build cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      #     scan-build make
          
      - name: Fetch Base Branch
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
  
      - name: Get Changed Files
        id: changed
        run: |
          FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} | grep -E '\.(cpp|hpp|cc|hh|cxx|hxx)$' || true)
          echo "$FILES" > changed-cpp-files.txt
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
        #- name: Run Clang-Tidy
         # run: |
          #  cd build
           # clang-tidy ../C++/*.cpp

      - name: Print Changed Files (debug)
        run: cat changed-cpp-files.txt || echo "No changed files"
        
      - name: Run Clang-Tidy on Changed Files
        if: steps.changed.outputs.changed_files != ''
        run: |
          echo "Running clang-tidy on:"
          echo "${{ steps.changed.outputs.changed_files }}"
          echo "${{ steps.changed.outputs.changed_files }}" | xargs clang-tidy

      - name: Run Clang Static Analyzer (scan-build)
        if: steps.changed.outputs.changed_files != ''
        run: |
          echo "Running scan-build on changed files..."
          mkdir -p build-scan
          cd build-scan
          scan-build cmake ..
          scan-build make
